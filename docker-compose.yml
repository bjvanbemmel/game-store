version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: docker/go/Dockerfile
    ports:
      - ${API_PORT:-81}:80
    volumes:
      - ./:/game-store/api
    networks:
      - game-store
    env_file:
      - .env
    depends_on:
      - postgres-prod
      - postgres-test
    restart: always
  gokiburi:
    build:
      context: .
      dockerfile: docker/gokiburi/Dockerfile
    ports:
      - 127.0.0.1:${GOKIBURI_PORT:-83}:9393
    volumes:
      - ./:/game-store/gokiburi
    networks:
      - game-store
    env_file:
      - .env
    depends_on:
      - api
    restart: always
  web:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    ports:
      - ${WEB_PORT:-82}:3000
      - 24678:24678
    volumes:
      - ./web:/game-store/web
    networks:
      - game-store
    env_file:
      - .env
    depends_on:
      - api
    restart: always
  postgres-prod:
    image: postgres:15.2-alpine3.17
    ports:
      - ${DB_PROD_PORT:-5433}:5432
    environment:
      POSTGRES_USER: ${DB_PROD_USER:-game-store}
      POSTGRES_PASSWORD: ${DB_PROD_PASSWORD:-game-store}
      POSTGRES_DB: ${DB_PROD_DATABASE:-game-store}
    volumes:
      - ./:/game-store/postgres
    networks:
      - game-store
    env_file:
      - .env
    restart: always
  postgres-test:
    image: postgres:15.2-alpine3.17
    ports:
      - ${DB_TEST_PORT:-54333}:5432
    environment:
      POSTGRES_USER: ${DB_TEST_USER:-game-store}
      POSTGRES_PASSWORD: ${DB_TEST_PASSWORD:-game-store}
      POSTGRES_DB: ${DB_TEST_DATABASE:-game-store}
    volumes:
      - ./:/game-store/postgres
    networks:
      - game-store
    env_file:
      - .env
    restart: always

networks:
  game-store:
